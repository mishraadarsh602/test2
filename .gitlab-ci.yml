# Node docker image on which this would be run
image: node:18.16.0

cache:
  paths:
    - node_modules/

stages:
  - build
  - deploy

# Job 1:
staging-build-main:
  stage: build
  script:
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
    - npm install
    # - npm run test
  only:
    staging

# Job 2:
# Deploy to staging
staging-deploy-main:
  image: ruby:latest
  only:
    staging
  stage: deploy
  script:
    - bash deploy/deploy.sh


# .deploy_template: &deploy
#   stage: deploy
#   image: "python:latest"
#   services:
#     - docker:19.03.12-dind
#   before_script:
#     - pip install awscli
#     - apt-get update -yq
#     - apt-get install -y ruby-dev
#     - gem install dpl
#   retry:
#     max: 1
#     when:
#       - runner_system_failure
#       - stuck_or_timeout_failure

# aws_ebs_deploy:
#   <<: *deploy
#   variables:
#     AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
#     AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
#     S3_BUCKET_NAME: $S3_BUCKET_NAME
#     AWS_REGION: 'eu-west-1'
#     DOCKER_DRIVER: overlay
#   script:
#     - echo $CI_COMMIT_SHA	 >version.txt
#     - aws s3 cp s3://$S3_BUCKET_NAME/.env .
#     - rm -rf node_modules/
#     - zip -r --exclude=*.git* deploy.zip ./
#     - echo $CI_COMMIT_SHA	 >version.txt
#     - dpl --provider=elasticbeanstalk --access-key-id=$AWS_ACCESS_KEY_ID --secret-access-key=$AWS_SECRET_ACCESS_KEY --region='eu-west-1' --bucket-name='elasticbeanstalk-eu-west-1-965967081742' --app='Envoie Backend(Prod)' --env='Envoiebackend-prod-new' --zip_file=deploy.zip --skip_cleanup
#   only:
#     - master
